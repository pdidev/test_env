name: Docker Image CI
on:
  schedule:
    - cron: 0 0 * * 1 #run every Monday 0:00
  push:
    branches:
        - main
        - 'v*'
  pull_request:
defaults:
  run:
    shell: bash
jobs:
  step1_build_base:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build base
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker pull ghcr.io/pdidev/test_env/base || true
        docker build \
          --cache-from ghcr.io/pdidev/test_env/base \
          -t ghcr.io/pdidev/test_env/base \
          -t ghcr.io/pdidev/test_env/base:${GITHUB_SHA:0:7} \
          spack/1-bionic
    - name: publish base
      run: |
        docker push ghcr.io/pdidev/test_env/base
        docker push ghcr.io/pdidev/test_env/base:${GITHUB_SHA:0:7}
    - name: build dask
      run: |
        docker pull ghcr.io/pdidev/test_env/builder || true
        docker build \
          --cache-from ghcr.io/pdidev/test_env/builder \
          --build-arg IMAGE_TAG=${GITHUB_SHA:0:7} \
          -t ghcr.io/pdidev/test_env/builder \
          -t ghcr.io/pdidev/test_env/builder:${GITHUB_SHA:0:7} \
          spack/2-spack
    - name: publish dask
      run: |
        docker push ghcr.io/pdidev/test_env/builder
        docker push ghcr.io/pdidev/test_env/builder:${GITHUB_SHA:0:7}
  step2_build_compiler:
    strategy:
      fail-fast: false
      matrix:
        version:  ['latest', 'oldest']
        compiler: ['gcc', 'clang']
    needs: step1_build_base
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build compiler
      run: |
        sudo rm -rf /opt/az /opt/hostedtoolcache /usr/local/graalvm \
                    /usr/local/lib/android /usr/local/lib/node_modules \
                    /usr/local/.ghcup /usr/share/dotnet /usr/share/swift
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker pull ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-nolibs || true
        docker build \
          --cache-from ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-nolibs \
          --build-arg VERSION=${{ matrix.version }} \
          --build-arg COMPILER=${{ matrix.compiler }} \
          --build-arg IMAGE_TAG=${GITHUB_SHA:0:7} \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-nolibs \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-nolibs-${GITHUB_SHA:0:7} \
          spack/3-${{ matrix.compiler }}
    - name: publish compiler
      run: |
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-nolibs
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-nolibs-${GITHUB_SHA:0:7}
    - name: build baselibs
      run: |
        docker pull ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }} || true
        docker build \
          --cache-from ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }} \
          --build-arg VERSION=${{ matrix.version }} \
          --build-arg COMPILER=${{ matrix.compiler }} \
          --build-arg IMAGE_TAG=${GITHUB_SHA:0:7} \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }} \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${GITHUB_SHA:0:7} \
          spack/4-baselibs
    - name: publish baselibs
      run: |
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${GITHUB_SHA:0:7}
  step3_build_mpi:
    strategy:
      fail-fast: false
      matrix:
        version:  ['latest', 'oldest']
        compiler: ['gcc', 'clang']
        mpi:      ['openmpi']
    needs: step2_build_compiler
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        sudo rm -rf /opt/az /opt/hostedtoolcache /usr/local/graalvm \
                    /usr/local/lib/android /usr/local/lib/node_modules \
                    /usr/local/.ghcup /usr/share/dotnet /usr/share/swift
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker pull ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }} || true
        docker build \
          --cache-from ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }} \
          --build-arg VERSION=${{ matrix.version }} \
          --build-arg COMPILER=${{ matrix.compiler }} \
          --build-arg MPI=${{ matrix.mpi }} \
          --build-arg IMAGE_TAG=${GITHUB_SHA:0:7} \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }} \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-${GITHUB_SHA:0:7} \
          spack/5-mpi
    - name: publish
      run: |
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-${GITHUB_SHA:0:7}
  step4_build_libs:
    strategy:
      fail-fast: false
      matrix:
        version:  ['latest', 'oldest']
        compiler: ['gcc', 'clang']
        mpi:      ['openmpi']
    needs: step3_build_mpi
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker pull ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-all || true
        docker build \
          --cache-from ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-all \
          --build-arg VERSION=${{ matrix.version }} \
          --build-arg COMPILER=${{ matrix.compiler }} \
          --build-arg MPI=${{ matrix.mpi }} \
          --build-arg IMAGE_TAG=${GITHUB_SHA:0:7} \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-all \
          -t ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-all-${GITHUB_SHA:0:7} \
          spack/6-optlibs
    - name: publish
      run: |
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-all
        docker push ghcr.io/pdidev/test_env/builder:${{ matrix.version }}-${{ matrix.compiler }}-${{ matrix.mpi }}-all-${GITHUB_SHA:0:7}
  step5_finalize:
    strategy:
      fail-fast: false
      matrix:
        version:  ['latest', 'oldest']
        compiler: ['gcc', 'clang']
        mpi:      ['openmpi']
        level:    ['mini', 'all']
    needs: step4_build_libs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        sudo rm -rf /opt/az /opt/hostedtoolcache /usr/local/graalvm \
                    /usr/local/lib/android /usr/local/lib/node_modules \
                    /usr/local/.ghcup /usr/share/dotnet /usr/share/swift
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        DASH_LEVEL="-${{ matrix.level }}"
        docker build \
          --build-arg VERSION=${{ matrix.version }} \
          --build-arg COMPILER=${{ matrix.compiler }} \
          --build-arg MPI=${{ matrix.mpi }} \
          --build-arg LIBS=${DASH_LEVEL/-mini/} \
          --build-arg IMAGE_TAG=${GITHUB_SHA:0:7} \
          -t ghcr.io/pdidev/spack/${{ matrix.version }}/${{ matrix.compiler }}/${{ matrix.mpi }}/${{ matrix.level }} \
          -t ghcr.io/pdidev/spack/${{ matrix.version }}/${{ matrix.compiler }}/${{ matrix.mpi }}/${{ matrix.level }}:${GITHUB_SHA:0:7} \
          spack/7-finalize
    - name: publish
      run: |
        docker push ghcr.io/pdidev/spack/${{ matrix.version }}/${{ matrix.compiler }}/${{ matrix.mpi }}/${{ matrix.level }}
        docker push ghcr.io/pdidev/spack/${{ matrix.version }}/${{ matrix.compiler }}/${{ matrix.mpi }}/${{ matrix.level }}:${GITHUB_SHA:0:7}
  system_bionic:
    strategy:
      fail-fast: false
      matrix:
        mpi: ['openmpi', 'mpich']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker build \
          --build-arg MPI=${{ matrix.mpi }} \
          -t ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/mini \
          -t ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/mini:${GITHUB_SHA:0:7} \
          system/bionic-mini
    - name: publish
      run: |
        docker push ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/mini
        docker push ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/mini:${GITHUB_SHA:0:7}
  system_bionic_libs:
    strategy:
      fail-fast: false
      matrix:
        mpi: ['openmpi', 'mpich']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker build \
          --build-arg MPI=${{ matrix.mpi }} \
          -t ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/all \
          -t ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/all:${GITHUB_SHA:0:7} \
          system/bionic-all
    - name: publish
      run: |
        docker push ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/all
        docker push ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/all:${GITHUB_SHA:0:7}
  system_bionic_pdi:
    strategy:
      fail-fast: false
      matrix:
        mpi: ['openmpi', 'mpich']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker build \
          --build-arg MPI=${{ matrix.mpi }} \
          -t ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/pdi \
          -t ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/pdi:${GITHUB_SHA:0:7} \
          system/bionic-pdi
    - name: publish
      run: |
        docker push ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/pdi
        docker push ghcr.io/pdidev/ubuntu/bionic/${{ matrix.mpi }}/pdi:${GITHUB_SHA:0:7}
